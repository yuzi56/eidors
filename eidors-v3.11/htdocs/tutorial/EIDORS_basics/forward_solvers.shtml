

<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
   <head>
<title>EIDORS</title>
   <style type="text/css">
        body, td, th {
        font-family: Verdana, Helvetica, Arial, sans-serif;
        font-size:80%;
        }
        pre, tt {
        font-family:lucida console, FixedSys, Courier, Terminal, monospaced;
        font-size:100%;
        }
        pre {
        background-color: #E0F0FE;
        border-style: groove;
        border-color: black;
        border-width: 2px;
        }
   </style>

</head>

<body link="#800000"
      marginwidth=5 marginheight=5 topmargin=5 leftmargin=5 
      vlink="#400000" >
<table border="0" cellspacing="0" cellpadding="0">
<tr height="80"><td valign="middle">
<a href="http://www.eidors.org">
<img alt="Eidors-logo" src="../../eidors-logo.jpg"></a>&nbsp;&nbsp;&nbsp;&nbsp;
</td><td>
<h2>
    EIDORS:
    <small><i>Electrical Impedance Tomography and
    Diffuse Optical Tomography Reconstruction Software</i></small>
</h2>
</td></tr></table>
<table border="0"> <tr>
<td valign="top" width="100">
<a href="http://eidors3d.sf.net/" >EIDORS</a>
(<a href="http://www.sce.carleton.ca/faculty/adler/eidors/index.shtml"
    >mirror</a>)<br>
<a href="../../index.shtml"
>Main</a><br>
<a href="../../docs.shtml"
   >Documentation</a><br>
<a href="../../tutorial/tutorial.shtml"
   >Tutorials</a><br>

<a href="../../tutorial/image_reconst.shtml"
      >&minus; Image Reconst</a><br>
<a href="../../tutorial/data_structures.shtml"
      >&minus; Data Structures</a><br>
<a href="../../tutorial/application_examples.shtml"
      >&minus; Applications</a><br>
<a href="../../tutorial/netgen.shtml"
      >&minus; FEM Modelling</a><br>
<a href="../../tutorial/GREIT.shtml"
      >&minus; GREIT</a><br>
<a href="../../tutorial/old-tutorials.shtml"
      >&minus; Old tutorials</a><br>
<a href="../../tutorial/workshop/workshop.shtml"
      >&minus; <i>Workshop</i></a><br>

<a href="../../download.shtml"
   >Download</a><br>
<a href="../../data_contrib.shtml"
   >Contrib Data</a><br>
<a href="../../GREIT/index.shtml"
   >GREIT</a><br>
<a href="../../doc/index.html"
   >Browse Docs</a><br>
<a href="https://sourceforge.net/p/eidors3d/code/HEAD/tree/trunk/"
   >Browse SVN</a><br>
<hr>
<a href="../../news.shtml">News</a><br>
<a href="https://lists.sourceforge.net/lists/listinfo/eidors3d-help"
   >Mailing list</a><br>
(<a href="https://sourceforge.net/mailarchive/forum.php?forum_name=eidors3d-help"
   >archive</a>)<br>
<a href="../../faq.shtml">FAQ</a><br>
<a href="../../programming/programming.shtml">Developer</a><br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
<!-- EIDORS Navigation sidebar
     $Id: nav-sidebar.shtml 6533 2022-12-31 00:53:54Z aadler $
  -->
<p>&nbsp;
<p>
<small>Hosted by</small><br>
<a  href="http://sourceforge.net/projects/eidors3d">
   <img src="http://sourceforge.net/sflogo.php?group_id=100454&type=4"
         border="0" alt="SourceForge.net Logo"  />
</a>
</td><td>&nbsp;</td><td valign="top">




<h2>EIDORS fwd_models</h2>

<h3> 
Creating an FEM and solving the forward problem
</h3>

EIDORS has functions to create common FEM models.

<pre>
% Forward solvers $Id: forward_solvers01.m 3790 2013-04-04 15:41:27Z aadler $

% 2D Model
imdl= mk_common_model('d2d1c',19);

% Create an homogeneous image
img_1 = mk_image(imdl);
h1= subplot(221);
show_fem(img_1);

% Add a circular object at 0.2, 0.5
% Calculate element membership in object
img_2 = img_1;
select_fcn = inline('(x-0.2).^2+(y-0.5).^2<0.1^2','x','y','z');
img_2.elem_data = 1 + elem_select(img_2.fwd_model, select_fcn);

h2= subplot(222);
show_fem(img_2);

img_2.calc_colours.cb_shrink_move = [.3,.8,-0.02];
common_colourbar([h1,h2],img_2);

print_convert forward_solvers01a.png

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/EIDORS_basics/forward_solvers01a.png">
<br><i> Figure:</i>
A 2D finite element model (left) and an
conductivity contrasting inclusion (right)
</center>

<pre>
% Forward solvers $Id: forward_solvers02.m 3790 2013-04-04 15:41:27Z aadler $

% Calculate a stimulation pattern
stim = mk_stim_patterns(19,1,[0,1],[0,1],{},1);

% Solve all voltage patterns
img_2.fwd_model.stimulation = stim;
img_2.fwd_solve.get_all_meas = 1;
vh = fwd_solve(img_2);

% Show first stim pattern
h1= subplot(221);
img_v = rmfield(img_2, 'elem_data');
img_v.node_data = vh.volt(:,1);
show_fem(img_v);

% Show 7th stim pattern
h2= subplot(222);
img_v = rmfield(img_2, 'elem_data');
img_v.node_data = vh.volt(:,7);
show_fem(img_v);

img_v.calc_colours.cb_shrink_move = [0.3,0.8,-0.02];
common_colourbar([h1,h2],img_v);
print_convert forward_solvers02a.png

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/EIDORS_basics/forward_solvers02a.png">
<br><i> Figure:</i>
The voltage pattern from adjacent stimulation
</center>

<pre>
% Forward solvers $Id: forward_solvers03.m 3790 2013-04-04 15:41:27Z aadler $

% Calculate a stimulation pattern
stim = mk_stim_patterns(19,1,[0,9],[0,1],{},1);

% Solve all voltage patterns
img_2.fwd_model.stimulation = stim;
img_2.fwd_solve.get_all_meas = 1;
vh = fwd_solve(img_2);

% Show first stim pattern
h1= subplot(221);
img_v = rmfield(img_2, 'elem_data');
img_v.node_data = vh.volt(:,1);
show_fem(img_v);

% Show 7th stim pattern
h2= subplot(222);
img_v = rmfield(img_2, 'elem_data');
img_v.node_data = vh.volt(:,7);
show_fem(img_v);

img_v.calc_colours.cb_shrink_move = [0.3,0.8,-0.02];
common_colourbar([h1,h2],img_v);

print_convert forward_solvers03a.png

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/EIDORS_basics/forward_solvers03a.png">
<br><i> Figure:</i>
The voltage pattern from opposite (nearly) stimulation
</center>

<pre>
% Forward solvers $Id: forward_solvers04.m 4062 2013-05-24 19:28:18Z bgrychtol $

% Calculate a stimulation pattern
stim = mk_stim_patterns(19,1,[0,1],[0,1],{},1);

% Solve all voltage patterns
img_1.fwd_model.stimulation = stim;
img_1.fwd_solve.get_all_meas = 1;
vh1= fwd_solve(img_1);

img_2.fwd_model.stimulation = stim;
img_2.fwd_solve.get_all_meas = 1;
vh2= fwd_solve(img_2);

img_v = rmfield(img_2, 'elem_data');

% Show homoeneous image
h1= subplot(231);
img_v.node_data = vh1.volt(:,1);
show_fem(img_v); axis equal

% Show inhomoeneous image
h2= subplot(232);
img_v.node_data = vh2.volt(:,1);
show_fem(img_v); axis equal

% Show difference image
h3= subplot(233);
img_v.node_data = vh1.volt(:,1) - vh2.volt(:,1);
show_fem(img_v); axis equal

img_v.calc_colours.cb_shrink_move = [0.3,0.8,-0.05];
common_colourbar([h1,h2,h3],img_v);

print_convert forward_solvers04a.png

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/EIDORS_basics/forward_solvers04a.png">
<br><i> Figure:</i>
The voltage pattern from a change in conductivity
</center>

<pre>
% Forward solvers $Id: forward_solvers05.m 3874 2013-04-17 19:32:11Z bgrychtol $


% Solve all voltage patterns
img_2.fwd_solve.get_all_meas = 1;
img_2.fwd_model.mdl_slice_mapper.npx = 64;
img_2.fwd_model.mdl_slice_mapper.npy = 64;

% Show [0-3] stim pattern
subplot(221);
stim = mk_stim_patterns(19,1,[0,3],[0,1],{},1);
img_2.fwd_model.stimulation = stim;
vh = fwd_solve(img_2);
show_current(img_2,vh.volt(:,1));
axis([-1,1,-1,1]); axis equal, axis tight

% Show [2-9] stim pattern
subplot(222);
stim = mk_stim_patterns(19,1,[0,7],[0,1],{},1);
img_2.fwd_model.stimulation = stim;
vh = fwd_solve(img_2);
show_current(img_2,vh.volt(:,3));
axis([-1,1,-1,1]); axis equal, axis tight

print_convert forward_solvers05a.png

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/EIDORS_basics/forward_solvers05a.png">
<br><i> Figure:</i>
The current pattern for various stimulation patterns
</center>

<H2>Voltage and Current stimulation</H2>
It is possible to do both voltage (Dirichlet) and
  current (Neumann) boundary conditions. The
voltage is specified with <tt>volt_pattern</tt> as
shown below

<H3>Current (Dirichlet) boundary conditions</H3>

<pre>
% Forward solvers $Id: forward_solvers06.m 5758 2018-05-19 20:37:04Z aadler $

% Simulation Image
imgs= mk_image(mk_common_model('d2d1c',21));
imgs.fwd_model.electrode = imgs.fwd_model.electrode([15:21,1:8]);
nel = num_elecs(imgs);
imgs.fwd_solve.get_all_meas = 1;

% Output Image
imgo = rmfield(imgs,'elem_data');
imgo.calc_colours.ref_level = 0;

% Regular "current" stimulation between electrodes 6 and 10
clear stim;
stim.stim_pattern = zeros(nel,1);
stim.stim_pattern([6,10]) =  [10,-10];
stim.meas_pattern = speye(nel);
imgs.fwd_model.stimulation = stim;

vh = fwd_solve( imgs ); imgo.node_data = vh.volt(:,1);

subplot(221); show_fem(imgo,[0,1]); axis off;

</pre>

<H3>Voltage (Neumann) and Current (Dirichlet) boundary conditions</H3>

<pre>
% Forward solvers $Id: forward_solvers07.m 5645 2017-09-10 20:33:02Z aadler $

% current stimulation between electrodes 6 and 10
stim.stim_pattern = zeros(nel,1);
stim.stim_pattern([6,10]) =  [10,-10];
% Voltage stimulation between electrodes 1,2 and 14,15
stim.volt_pattern = zeros(nel,1);
stim.volt_pattern([1,2,14,15]) =  [1,1,-1,-1]*5;
% Need to put NaN in the corresponding elements of stim_pattern
stim.stim_pattern([1,2,14,15]) =  NaN*ones(1,4);

imgs.fwd_model.stimulation = stim;
vh = fwd_solve( imgs ); imgo.node_data = vh.volt(:,1);

subplot(222); show_fem(imgo,[0,1]); axis off

print_convert forward_solvers07a.png

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/EIDORS_basics/forward_solvers07a.png">
<br><i> Figure:</i>
Left: Current specified on electrodes 6 and 10.
Right: Voltage specified on electrodes 1,2,14,15 and current specified on electrodes 6 and 10.
</center>
</td></tr></table>
<p>
<small>
    Last Modified: $Date: 2017-09-10 16:33:02 -0400 (Sun, 10 Sep 2017) $ by $Author: aadler $
</small>
</BODY></HTML>
<!--
      -->
