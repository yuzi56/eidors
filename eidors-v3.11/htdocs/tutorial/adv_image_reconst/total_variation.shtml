

<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
   <head>
<title>EIDORS</title>
   <style type="text/css">
        body, td, th {
        font-family: Verdana, Helvetica, Arial, sans-serif;
        font-size:80%;
        }
        pre, tt {
        font-family:lucida console, FixedSys, Courier, Terminal, monospaced;
        font-size:100%;
        }
        pre {
        background-color: #E0F0FE;
        border-style: groove;
        border-color: black;
        border-width: 2px;
        }
   </style>

</head>

<body link="#800000"
      marginwidth=5 marginheight=5 topmargin=5 leftmargin=5 
      vlink="#400000" >
<table border="0" cellspacing="0" cellpadding="0">
<tr height="80"><td valign="middle">
<a href="http://www.eidors.org">
<img alt="Eidors-logo" src="../../eidors-logo.jpg"></a>&nbsp;&nbsp;&nbsp;&nbsp;
</td><td>
<h2>
    EIDORS:
    <small><i>Electrical Impedance Tomography and
    Diffuse Optical Tomography Reconstruction Software</i></small>
</h2>
</td></tr></table>
<table border="0"> <tr>
<td valign="top" width="100">
<a href="http://eidors3d.sf.net/" >EIDORS</a>
(<a href="http://www.sce.carleton.ca/faculty/adler/eidors/index.shtml"
    >mirror</a>)<br>
<a href="../../index.shtml"
>Main</a><br>
<a href="../../docs.shtml"
   >Documentation</a><br>
<a href="../../tutorial/tutorial.shtml"
   >Tutorials</a><br>

<a href="../../tutorial/image_reconst.shtml"
      >&minus; Image Reconst</a><br>
<a href="../../tutorial/data_structures.shtml"
      >&minus; Data Structures</a><br>
<a href="../../tutorial/application_examples.shtml"
      >&minus; Applications</a><br>
<a href="../../tutorial/netgen.shtml"
      >&minus; FEM Modelling</a><br>
<a href="../../tutorial/GREIT.shtml"
      >&minus; GREIT</a><br>
<a href="../../tutorial/old-tutorials.shtml"
      >&minus; Old tutorials</a><br>
<a href="../../tutorial/workshop/workshop.shtml"
      >&minus; <i>Workshop</i></a><br>

<a href="../../download.shtml"
   >Download</a><br>
<a href="../../data_contrib.shtml"
   >Contrib Data</a><br>
<a href="../../GREIT/index.shtml"
   >GREIT</a><br>
<a href="../../doc/index.html"
   >Browse Docs</a><br>
<a href="https://sourceforge.net/p/eidors3d/code/HEAD/tree/trunk/"
   >Browse SVN</a><br>
<hr>
<a href="../../news.shtml">News</a><br>
<a href="https://lists.sourceforge.net/lists/listinfo/eidors3d-help"
   >Mailing list</a><br>
(<a href="https://sourceforge.net/mailarchive/forum.php?forum_name=eidors3d-help"
   >archive</a>)<br>
<a href="../../faq.shtml">FAQ</a><br>
<a href="../../programming/programming.shtml">Developer</a><br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
<!-- EIDORS Navigation sidebar
     $Id: nav-sidebar.shtml 6533 2022-12-31 00:53:54Z aadler $
  -->
<p>&nbsp;
<p>
<small>Hosted by</small><br>
<a  href="http://sourceforge.net/projects/eidors3d">
   <img src="http://sourceforge.net/sflogo.php?group_id=100454&type=4"
         border="0" alt="SourceForge.net Logo"  />
</a>
</td><td>&nbsp;</td><td valign="top">




<h2> 
Iterative Gauss Newton reconstruction in 3D
</h2>

This tutorial shows the generation of images from the
paper:
<ul>
<i>Total Variation Regularization in Electrical Impedance Tomography</i>
Andrea Borsic, Brad M. Graham, Andy Adler, William R. B. Lionheart 
</ul>

The first step is to simulate an image which
has a blocky shape (here we choose a pie slice).

<pre>
% Create mesh with blocky objects $Id: total_variation01.m 3273 2012-06-30 18:00:35Z aadler $

% Simulation (forward model) 1024 elements
imdl= mk_common_model('d2c0',16); 
fmdl= imdl.fwd_model;

% Identify block in centre
ctrs= interp_mesh(fmdl);
xe= ctrs(:,1); ye= ctrs(:,2);
re= sqrt(xe.^2+ye.^2);
block=(ye>0 & re<.69); % for 1024

sim_img= mk_image(fmdl,1);
v_homg= fwd_solve(sim_img);

sim_img.elem_data(block) = 1.1;
v_simu= fwd_solve(sim_img);

clf;
calc_colours('greylev',-.1); % white background
show_fem(sim_img)
print -r50 -dpng total_variation01a.png;

</pre>

<center>
<img src="total_variation01a.png">
<br><i> Figure:</i>
Pie slice shape that is to be reconstructed
</center>

<h3> GN reconstruction </h3>
<pre>
% Compare 2D algorithms
% $Id: total_variation02.m 4839 2015-03-30 07:44:50Z aadler $

% Create Inverse Model
inv2d= eidors_obj('inv_model', 'EIT inverse');
inv2d.reconst_type= 'difference';
inv2d.jacobian_bkgnd.value= 1;

imb=  mk_common_model('c2c',16); %576 Elem model
inv2d.fwd_model= imb.fwd_model;
inv2d.fwd_model.np_fwd_solve.perm_sym= '{y}';

% Guass-Newton solvers
inv2d.solve=       @eidors_default;

% NOSER prior
inv2d.hyperparameter.value = .55;
inv2d.RtR_prior=   @prior_noser;

imgr= inv_solve( inv2d, v_homg, v_simu);

%Simulation image
subplot(221)
show_slices(sim_img)
subplot(223)
z=calc_slices(sim_img);
c=calc_colours(z); h=mesh(z,c);
set(h, 'CDataMapping', 'direct' );
view(173,34);
set(gca,{'XLim','YLim','ZLim','XTickLabel','YTickLabel'}, ...
        {[1 64],[1 64],[0.9,1.1],[],[]})

%Reconstructed image
subplot(222)
show_slices(imgr)
subplot(224)
z=calc_slices(imgr);
c=calc_colours(z); h=mesh(z,c);
set(h, 'CDataMapping', 'direct' );
view(173,34);
set(gca,{'XLim','YLim','ZLim','XTickLabel','YTickLabel'}, ...
        {[1 64],[1 64],[-0.1,0.1],[],[]})

print -r100 -dpng total_variation02a.png;


</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/adv_image_reconst/total_variation02a.png">
<br><i> Figure:</i>
Simulation image (left) and GN reconstructed image (right)
Gauss-Newton (2-norm) reconstructions are not
very successful for this shape.
<i>Note:</i> The 'sliver' of background shown on the meshes
at right is a rendering bug in matlab 6.5. It does not
show up in the matlab window.
</center>

<h3> TV reconstruction </h3>
One technique to permit image regularization without imposing smooth-
ing is the Total Variation (TV) formulation of regularization. The Total
Variation functional is assuming an important role in the regularization
of inverse problems belonging to many disciplines, thanks to its ability to
preserve discontinuities in the reconstructed profiles. Application of
non-smooth reconstruction techniques is important for medical and process
imaging applications of EIT, as they involve discontinuous profiles.
Qualitative and quantitative benefits can be expected in these fields.
<p>
We outline the properties of the TV functional in the next section, to
motivate its use as a regularization penalty term and to understand the nu-
merical difficulties associated with it. The use of the TV functional leads
in fact to the formulation of the inverse problem as a minimization of a
non-differentiable function. Application of traditional minimization
techniques (Steepest Descent Method, Newton Method) has proven to be
inefficient [Dobson, Santosa, 1994][Borsic, 2002].
Recent developments in non-smooth optimization (Primal
Dual-Interior Point Methods) have brought the means of dealing with the
minimization problem efficiently. The performance of this algorithm with
respect to traditional smooth algorithms is the subject of this paper.

<pre>
% TV Solutions % $Id: total_variation03.m 3428 2012-07-02 20:56:41Z bgrychtol $

% Create TV Inverse Model
invtv= eidors_obj('inv_model', 'EIT inverse');
invtv.reconst_type= 'difference';
invtv.jacobian_bkgnd.value= 1;

invtv.hyperparameter.value = 1e-3;
invtv.solve=       @inv_solve_TV_pdipm;
invtv.R_prior=     @prior_TV;
invtv.parameters.term_tolerance= 1e-3;
invtv.parameters.keep_iterations= 0;

invtv.fwd_model= inv2d.fwd_model;
   
invtv.fwd_model = mdl_normalize(invtv.fwd_model, 1);


maxiters= [1,3,6,15];
for i= 1:length(maxiters)
   invtv.parameters.max_iterations= maxiters(i);
   imgtv= inv_solve( invtv, v_homg, v_simu);
   imgtv.calc_colours.ref_level=0;

   %Reconstructed image
   subplot(2,length(maxiters),i);
   show_slices(imgtv)
   subplot(2,length(maxiters),i+length(maxiters));
   z=calc_slices(imgtv);
   c=calc_colours(z); h=mesh(z,c);
   set(h, 'CDataMapping', 'direct' );

   title(sprintf('TV iters=%d',maxiters(i)))
   view(173,34);
   set(gca,{'XLim','YLim','ZLim','XTickLabel','YTickLabel'}, ...
           {[1 64],[1 64],[-0.02,0.1],[],[]})
end

print -r150 -dpng total_variation03a.png;


</pre>


<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/adv_image_reconst/total_variation03a.png">
<br><i> Figure:</i>
Total Variation reconstructions as a function of the number
of iterations. From left to right iterations are: 1,3,6,8
</center>

<h3> TV reconstruction vs iteration </h3>

In order to understand how TV reconstructions improve with
the iteration number, we calculate:

<pre>
% TV Solutions % $Id: total_variation04.m 4839 2015-03-30 07:44:50Z aadler $

% Create TV Inverse Model
invtv= eidors_obj('inv_model', 'EIT inverse');
invtv.reconst_type= 'difference';
invtv.jacobian_bkgnd.value= 1;

invtv.hyperparameter.value = .03;
invtv.solve=       @inv_solve_TV_pdipm;
invtv.R_prior=     @prior_TV;
invtv.parameters.term_tolerance= 1e-3;
invtv.parameters.keep_iterations= 1;

invtv.fwd_model= inv2d.fwd_model;
   
invtv.parameters.max_iterations= 20;
imgtv= inv_solve( invtv, v_homg, v_simu);

clf;
show_slices(imgtv)
print -r100 -dpng total_variation04a.png;

imgs= calc_slices(imgtv);
idx = [1,3,6,10,20];

subplot(211);
plot(squeeze(imgs(:,32,[idx])));
axis([1 64 -0.04 0.12]); set(gca,'XTickLabel',[]);
 legend('1','3','6','10','20');

subplot(212);
plot(squeeze(imgs(32,:,[idx])));
axis([1 64 -0.04 0.12]); set(gca,'XTickLabel',[]);

print -r75 -dpng total_variation04b.png;

</pre>


<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/adv_image_reconst/total_variation04a.png">
<img src="total_variation04b.png">
<br><i> Figure:</i>
<b>Left</b>
Total Variation reconstructions for iterations 1 to 20
(from left to right, top to bottom)
<b>Right</b>
Slices through the conductivity distribution vs iteration 
number.
 <i>Top</i> vertical centre cut, 
 <i>Bottom</i> horizontal centre cut, 
</center>


</td></tr></table>
<p>
<small>
    Last Modified: $Date: 2017-02-28 13:12:08 -0500 (Tue, 28 Feb 2017) $ by $Author: aadler $
</small>
</BODY></HTML>
<!--
      -->
