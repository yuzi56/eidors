

<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
   <head>
<title>EIDORS</title>
   <style type="text/css">
        body, td, th {
        font-family: Verdana, Helvetica, Arial, sans-serif;
        font-size:80%;
        }
        pre, tt {
        font-family:lucida console, FixedSys, Courier, Terminal, monospaced;
        font-size:100%;
        }
        pre {
        background-color: #E0F0FE;
        border-style: groove;
        border-color: black;
        border-width: 2px;
        }
   </style>

</head>

<body link="#800000"
      marginwidth=5 marginheight=5 topmargin=5 leftmargin=5 
      vlink="#400000" >
<table border="0" cellspacing="0" cellpadding="0">
<tr height="80"><td valign="middle">
<a href="http://www.eidors.org">
<img alt="Eidors-logo" src="../../eidors-logo.jpg"></a>&nbsp;&nbsp;&nbsp;&nbsp;
</td><td>
<h2>
    EIDORS:
    <small><i>Electrical Impedance Tomography and
    Diffuse Optical Tomography Reconstruction Software</i></small>
</h2>
</td></tr></table>
<table border="0"> <tr>
<td valign="top" width="100">
<a href="http://eidors3d.sf.net/" >EIDORS</a>
(<a href="http://www.sce.carleton.ca/faculty/adler/eidors/index.shtml"
    >mirror</a>)<br>
<a href="../../index.shtml"
>Main</a><br>
<a href="../../docs.shtml"
   >Documentation</a><br>
<a href="../../tutorial/tutorial.shtml"
   >Tutorials</a><br>

<a href="../../tutorial/image_reconst.shtml"
      >&minus; Image Reconst</a><br>
<a href="../../tutorial/data_structures.shtml"
      >&minus; Data Structures</a><br>
<a href="../../tutorial/application_examples.shtml"
      >&minus; Applications</a><br>
<a href="../../tutorial/netgen.shtml"
      >&minus; FEM Modelling</a><br>
<a href="../../tutorial/GREIT.shtml"
      >&minus; GREIT</a><br>
<a href="../../tutorial/old-tutorials.shtml"
      >&minus; Old tutorials</a><br>
<a href="../../tutorial/workshop/workshop.shtml"
      >&minus; <i>Workshop</i></a><br>

<a href="../../download.shtml"
   >Download</a><br>
<a href="../../data_contrib.shtml"
   >Contrib Data</a><br>
<a href="../../GREIT/index.shtml"
   >GREIT</a><br>
<a href="../../doc/index.html"
   >Browse Docs</a><br>
<a href="https://sourceforge.net/p/eidors3d/code/HEAD/tree/trunk/"
   >Browse SVN</a><br>
<hr>
<a href="../../news.shtml">News</a><br>
<a href="https://lists.sourceforge.net/lists/listinfo/eidors3d-help"
   >Mailing list</a><br>
(<a href="https://sourceforge.net/mailarchive/forum.php?forum_name=eidors3d-help"
   >archive</a>)<br>
<a href="../../faq.shtml">FAQ</a><br>
<a href="../../programming/programming.shtml">Developer</a><br>



&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
<!-- EIDORS Navigation sidebar
     $Id: nav-sidebar.shtml 6533 2022-12-31 00:53:54Z aadler $
  -->
<p>&nbsp;
<p>
<small>Hosted by</small><br>
<a  href="http://sourceforge.net/projects/eidors3d">
   <img src="http://sourceforge.net/sflogo.php?group_id=100454&type=4"
         border="0" alt="SourceForge.net Logo"  />
</a>
</td><td>&nbsp;</td><td valign="top">




<h2> 
Introduction to dual models
</h2>

Dual model systems use two models of the underlying system:
<ul>
<li> a fine (high density) FEM, on which to perform the 
   forward model (calculate <i>measurements</i> from
   <i>parameters</i>), and
<li> a coarse (lower density) FEM, on which to perform the 
   inverse problem (reconstructing image <i>parameters</i>
   from <i>measurements</i>)
</ul>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/dual_model/coarse-fine-figure.png">
<br><i> Figure:</i>
Schematic of a dual model based inverse problem
</center>

<h3>Simulated data</h3>

First, simulate some data, based on a 576 element mesh
<pre>
% Simulate data $Id: dual_model01.m 2162 2010-04-04 20:49:45Z aadler $
imdl= mk_common_model('c2c2',16);
img= mk_image(imdl);
vh=fwd_solve(img);
idx=[365,328,292,259,227,198,170,145,121];
img.elem_data([idx,idx+1,101,81])=1.1;
vi=fwd_solve(img);

show_fem(img);
print_convert('dual_model01a.png', '-density 60');

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/dual_model/dual_model01a.png">
<br><i> Figure:</i>
Simulation data
</center>

<h3>Simple Example: Dual model using multi-element parameters</H3>


Next, we compare two coarse meshes
<ol>
<li> A 64 element mesh where the fine==coarse mesh. There are
      64 conductivity parameters to solve
<li> A 64 element mesh where 4 inner elements have the
      same conductivity. Thus there are 64-(4-1)=61 conductivity
      parameters to solve
<li> A 64 element mesh where 9 elements in an inner pie
      slice have the same conductivity. Thus there are
      64-(9-1)=56 conductivity parameters to solve
</ol>

<pre>
% Simulate data $Id: dual_model02.m 4839 2015-03-30 07:44:50Z aadler $

% create base model
mdl_base=mk_common_model('a2c0',16);
mdl_base.RtR_prior = @prior_noser;
mdl_base.hyperparameter.value = .2;

elems= mdl_base.fwd_model.elems;
nodes= mdl_base.fwd_model.nodes;
e= size(elems,1);


for model = 1:3
   if model==1
% Model 1: coarse==fine. each elem has a parameter
      params= 1:e; 
   elseif model==2
% Model 2: coarse model, inner circle has one parameter
      params= [1,1,1,1, 2:e-3];
   elseif model==3
% Model 3: coarse model, top left slice has one parameter
      params= 1:e;
      params([4,8,15:16,23:24,34:36])= 0;
      [jnk1,jnk2,params]= unique(params);
   end

% Create inverse_model
   imdl(model)= mdl_base;
   imdl(model).fwd_model.coarse2fine = sparse(1:e,params,1,e,max(params));

   subplot(2,3, model)
   show_fem(imdl(model).fwd_model);

% Show parameter numbers
   numeros= reshape(sprintf('%2d',params),2,e)';
   xc=mean(reshape(nodes(elems,1),e,3),2);
   yc=mean(reshape(nodes(elems,2),e,3),2);
   text(xc,yc,numeros,'FontSize',8, ...
            'HorizontalAlignment','center');

end

print_convert dual_model02a.png

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/dual_model/dual_model02a.png">
<br><i> Figure:</i>
<i>Left</i> "Fine" mesh (64 parameters)
<i>Middle</i> Coarse mesh (61 parameters)
<i>Right</i> Coarse mesh (56 parameters)
</center>

<h3>Coarse to Fine Mapping</H3>

If we consider a smaller model, where
<pre width=50>
   % fine_param_1 == coarse_param_1
   % fine_param_2 == coarse_param_2
   % fine_param_3 == coarse_param_3
   % fine_param_4 == coarse_param_3
</pre>
Then the mapping from coarse to fine would be
<pre width=50>
   [ 1 0 0 ] [ coarse_param_1 ]   [ fine_param_1 ]
   [ 0 1 0 ] [ coarse_param_2 ] = [ fine_param_2 ]
   [ 0 0 1 ] [ coarse_param_3 ]   [ fine_param_3 ]
   [ 0 0 1 ]                      [ fine_param_4 ]
</pre>

<h3>Image Reconstructions</H3>

<pre>
% Simulate data $Id: dual_model03.m 2162 2010-04-04 20:49:45Z aadler $

for model= 1:3
   img= inv_solve(imdl(model), vh, vi);
   subplot(2,3,model)
   show_fem(img);
end

print_convert dual_model03a.png;

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/dual_model/dual_model03a.png">
<br><i> Figure:</i>
Reconstructed images.
<i>Left</i> "Fine" mesh (64 parameters)
<i>Middle</i> Coarse mesh (61 parameters)
<i>Right</i> Coarse mesh (56 parameters)
</center>


<h3>Example #2: Fine and Coarse meshes</h3>

We consider a coarse mesh of 64 elements, and fine meshes
of 64 (same as coarse), 256, and 576 elements

<pre>
% create fine meshes $Id: dual_model04.m 4839 2015-03-30 07:44:50Z aadler $

% create base model
mdl_coarse=mk_common_model('a2c0',16);

for model = 1:3
   if model==1
% Model 1: 64 elements
      mdl_str= 'a2c0';
   elseif model==2
% Model 2: 256 elements
      mdl_str= 'b2c0';
   elseif model==3
% Model 3: 576 elements
      mdl_str= 'c2c0';
   end

   mdl_fine= mk_common_model(mdl_str,16);
   mdl_fine.fwd_model.mk_coarse_fine_mapping.n_interp= 150;
   mdl_fine.RtR_prior = @prior_noser;
   mdl_fine.hyperparameter.value = .2;

   imdl(model)= mdl_fine;
   imdl(model).fwd_model.coarse2fine = ...
       mk_coarse_fine_mapping( mdl_fine.fwd_model, mdl_coarse.fwd_model);

   subplot(2,3, model)
   show_fem(mdl_fine.fwd_model);
end

print_convert dual_model04a.png

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/dual_model/dual_model04a.png">
<br><i> Figure:</i>
Reconstructed images.
<i>Left</i> "Fine" mesh (64 elements)
<i>Middle</i> Fine mesh (256 elements)
<i>Right</i> Fine mesh (576 elements)
</center>

Reconstruct images, and then image onto the
coarse model and the fine model.

<pre>
% Simulate data $Id: dual_model05.m 2162 2010-04-04 20:49:45Z aadler $

% Reconstruct
for model= 1:3
   img(model)= inv_solve(imdl(model), vh, vi);
end

% Show image mapped to fine model
for model= 1:3
   subplot(2,3,model)
   show_fem(img(model));
end

print_convert dual_model05b.png;

% Show image mapped to coarse model
for model= 1:3
   subplot(2,3,model)
   img(model).fwd_model = mdl_coarse.fwd_model;
   show_fem(img(model));
end

print_convert dual_model05a.png;

</pre>

<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/dual_model/dual_model05a.png">
<br><i> Figure:</i>
Reconstructed images mapped onto the coarse model.
<i>Left</i> "Fine" mesh (64 elements)
<i>Middle</i> Fine mesh (256 elements)
<i>Right</i> Fine mesh (576 elements)
</center>
<center>
<img src = "http://eidors3d.sourceforge.net/tutorial/dual_model/dual_model05b.png">
<br><i> Figure:</i>
Reconstructed images mapped onto the fine model.
<i>Left</i> "Fine" mesh (64 elements)
<i>Middle</i> Fine mesh (256 elements)
<i>Right</i> Fine mesh (576 elements)
</center>


</td></tr></table>
<p>
<small>
    Last Modified: $Date: 2017-02-28 13:12:08 -0500 (Tue, 28 Feb 2017) $ by $Author: aadler $
</small>
</BODY></HTML>
<!--
      -->
